name: Append Devlog Entry on Merge

on:
  pull_request:
    types:
      - closed

jobs:
  append-devlog-entry:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Determine devlog date
        id: determine-date
        run: |
          python <<'PY'
          import os
          from datetime import datetime
          from zoneinfo import ZoneInfo

          merged_at = os.environ.get("MERGED_AT")
          if not merged_at:
            raise SystemExit("Missing merged_at timestamp")

          dt = datetime.fromisoformat(merged_at.replace("Z", "+00:00"))
          dt_local = dt.astimezone(ZoneInfo("America/Phoenix"))

          env_path = os.environ["GITHUB_ENV"]
          with open(env_path, "a", encoding="utf-8") as env_file:
            env_file.write(f"DEVLOG_DATE={dt_local:%Y-%m-%d}\n")
            env_file.write(f"DEVLOG_FILE=docs/devlog/{dt_local:%Y-%m-%d}.md\n")
          PY
        env:
          MERGED_AT: ${{ github.event.pull_request.merged_at }}

      - name: Append entry to devlog
        run: |
          python <<'PY'
          import os
          from pathlib import Path

          default_entry = f"Merged PR #{os.environ['PR_NUMBER']} â€” {os.environ['PR_TITLE']}."
          body = os.environ.get("PR_BODY") or ""
          start_marker = "<!-- DEVLOG_START -->"
          end_marker = "<!-- DEVLOG_END -->"

          if start_marker in body and end_marker in body:
            entry = body.split(start_marker, 1)[1].split(end_marker, 1)[0].strip()
            if not entry:
              entry = default_entry
          else:
            entry = default_entry

          file_path = Path(os.environ["DEVLOG_FILE"])
          file_path.parent.mkdir(parents=True, exist_ok=True)

          with file_path.open("a", encoding="utf-8") as devlog:
            devlog.write(f"- {entry}\n")
          PY
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          DEVLOG_FILE: ${{ env.DEVLOG_FILE }}

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$DEVLOG_FILE"
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "[skip ci] Add devlog entry for PR #${{ github.event.pull_request.number }}"
            git push
          fi
        env:
          DEVLOG_FILE: ${{ env.DEVLOG_FILE }}
