name: Update Devlog Daily Summary

on:
  workflow_dispatch:
    inputs:
      summary:
        description: "Daily summary text"
        required: true
        type: string
      title:
        description: "Optional summary title"
        required: false
        type: string
      date_override:
        description: "Override date (YYYY-MM-DD, America/Phoenix)"
        required: false
        type: string

jobs:
  update-daily-summary:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Determine devlog date
        id: determine-date
        run: |
          python <<'PY'
          import os
          from datetime import datetime
          from zoneinfo import ZoneInfo

          override = os.environ.get("DATE_OVERRIDE")
          if override:
            try:
              target = datetime.strptime(override, "%Y-%m-%d")
            except ValueError as exc:
              raise SystemExit(f"Invalid date_override: {exc}")
          else:
            target = datetime.now(ZoneInfo("America/Phoenix"))

          env_path = os.environ["GITHUB_ENV"]
          with open(env_path, "a", encoding="utf-8") as env_file:
            env_file.write(f"DEVLOG_DATE={target:%Y-%m-%d}\n")
            env_file.write(f"DEVLOG_FILE=docs/devlog/{target:%Y-%m-%d}.md\n")
          PY
        env:
          DATE_OVERRIDE: ${{ github.event.inputs.date_override }}

      - name: Update daily summary block
        run: |
          python <<'PY'
          import os
          from pathlib import Path

          summary = os.environ["SUMMARY"].strip()
          title = (os.environ.get("TITLE") or "").strip()
          file_path = Path(os.environ["DEVLOG_FILE"])
          file_path.parent.mkdir(parents=True, exist_ok=True)

          block_lines = ["<!-- DAILY_SUMMARY_START -->", "### Daily Summary"]
          if title:
            block_lines.append(f"#### {title}")
          block_lines.append(summary)
          block_lines.append("<!-- DAILY_SUMMARY_END -->")
          block = "\n".join(block_lines) + "\n\n"

          if file_path.exists():
            content = file_path.read_text(encoding="utf-8")
          else:
            content = ""

          start_marker = "<!-- DAILY_SUMMARY_START -->"
          end_marker = "<!-- DAILY_SUMMARY_END -->"

          if start_marker in content and end_marker in content:
            before, _sep, remainder = content.partition(start_marker)
            _middle, _sep2, after = remainder.partition(end_marker)
            updated_content = before + block + after.lstrip("\n")
          else:
            updated_content = block + content.lstrip("\n")

          file_path.write_text(updated_content, encoding="utf-8")
          PY
        env:
          SUMMARY: ${{ github.event.inputs.summary }}
          TITLE: ${{ github.event.inputs.title }}
          DEVLOG_FILE: ${{ env.DEVLOG_FILE }}

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$DEVLOG_FILE"
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "[skip ci] Update daily summary for ${{ env.DEVLOG_DATE }}"
            git push
          fi
        env:
          DEVLOG_FILE: ${{ env.DEVLOG_FILE }}
          DEVLOG_DATE: ${{ env.DEVLOG_DATE }}
